<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.qyh.blog.comment.article.CommentDao">
	
	<resultMap type="BaseComment" id="BaseCommentDetail">
		<id property="id" column="id"/>
		<result column="parent_path" property="parentPath"/>
		<result column="content" property="content"/>
		<result column="comment_date" property="commentDate"/>
		<result column="comment_status" property="status" typeHandler="EnumOrdinalTypeHandler"/>
		<result column="comment_nickname" property="nickname"/>
		<result column="comment_email" property="email"/>
		<result column="comment_ip" property="ip"/>
		<result column="comment_admin" property="admin"/>
		<result column="comment_gravatar" property="gravatar"/>
		<result column="comment_website" property="website"/>
	</resultMap>
	
	<resultMap type="Comment" id="CommentDetail" extends="BaseCommentDetail">
		<association property="article" javaType="Article">
			<result column="article_id" property="id"/>
			<result column="art_title" property="title"/>
			<result column="art_alias" property="alias"/>
			<association property="space" javaType="Space">
				<result column="space_alias" property="alias"/>
			</association>
		</association>
		<association property="parent" javaType="Comment">
			<result column="parent_id" property="id"/>
			<result column="p_comment_nickname" property="nickname"/>
			<result column="p_comment_email" property="email"/>
			<result column="p_comment_ip" property="ip"/>
			<result column="p_comment_admin" property="admin"/>
			<result column="p_comment_gravatar" property="gravatar"/>
		</association>
	</resultMap>
	
	<resultMap type="me.qyh.blog.comment.article.CommentDao$ArticleComments" id="ArticleCommentsDetail">
		<id column="article_id"/>
		<result column="article_id" property="id"/>
		<result column="comments" property="comments"/>
	</resultMap>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO blog_comment(parent_id,parent_path,content,article_id,comment_date,comment_status,comment_nickname,comment_email,comment_ip,comment_admin,comment_gravatar,comment_website)
		VALUES(#{parent.id},#{parentPath},#{content},#{article.id},#{commentDate},#{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler},#{nickname},#{email},#{ip},#{admin},#{gravatar},#{website})
	</insert>
	
	<select id="selectCountByIpAndDatePeriod" resultType="int">
		SELECT COUNT(id) FROM blog_comment WHERE comment_ip = #{ip} AND comment_date BETWEEN #{begin} AND #{end} 
	</select>
	
	<select id="selectCountWithTree" resultType="int">
		SELECT COUNT(id) FROM blog_comment WHERE article_id = #{article.id} AND parent_path = '/'
		<if test="status != null">
		   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
	</select>
	
	<select id="selectCountWithList" resultType="int">
		SELECT COUNT(id) FROM blog_comment WHERE article_id = #{article.id}
		<if test="status != null">
		   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
	</select>
	
	<select id="selectPageWithTree" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.article_id,a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website
		FROM 
		  blog_comment a JOIN 
		  (SELECT id, parent_path 
		    FROM blog_comment 
		    WHERE parent_path = '/'
		    AND article_id = #{article.id}
		    <if test="status != null">
		    AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
		    <choose>
		    	<when test="asc">
		    		 ORDER BY comment_date ,id
		    	</when>
		    	<otherwise>
		    		 ORDER BY comment_date DESC,id DESC
		    	</otherwise>
		    </choose>
		  LIMIT #{offset},#{pageSize}) roots
		  ON (a.parent_path LIKE CONCAT('/',roots.id,'/%') OR a.id=roots.id)
		   <if test="status != null">
		    WHERE a.comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
	</select>
	
	<select id="selectPageWithList" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.article_id,
		  a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website,
		  p.comment_nickname AS p_comment_nickname,p.comment_email AS p_comment_email,p.comment_ip AS p_comment_ip,p.comment_admin AS p_comment_admin,p.comment_gravatar AS p_comment_gravatar
		FROM 
		  blog_comment a 
		LEFT OUTER JOIN blog_comment p ON a.parent_id = p.id
		WHERE a.article_id = #{article.id}
		<if test="status != null">
		  	AND a.comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
		 <choose>
	    	<when test="asc">
	    		 ORDER BY a.comment_date ,id
	    	</when>
	    	<otherwise>
	    		 ORDER BY a.comment_date DESC,id DESC
	    	</otherwise>
	    </choose>
		LIMIT #{offset},#{pageSize}
	</select>
	
	<delete id="deleteByPath">
		DELETE FROM blog_comment  WHERE (parent_path LIKE CONCAT('', #{path},'%'))
	</delete>
	
	<delete id="deleteById">
		DELETE FROM blog_comment WHERE id = #{id}
	</delete>
	
	<select id="selectById" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.article_id,a.comment_date,comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website
		 FROM blog_comment a 
		 WHERE a.id = #{id}
	</select>
	
	<select id="selectLast" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content
		 FROM blog_comment a 
		 WHERE a.article_id = #{article.id}
		 AND a.comment_ip = #{ip}
		 <choose>
		 	<when test="parent == null">
		 		AND parent_path = '/'
		 	</when>
		 	<otherwise>
		 		AND parent_id = #{parent.id}
		 	</otherwise>
		 </choose>
		 ORDER BY a.comment_date DESC,id DESC
		 LIMIT 0,1
	</select>
	
	
	<delete id="deleteByIpAndArticle">
		DELETE FROM blog_comment
		WHERE article_id = #{article.id} AND (comment_ip = #{ip} OR parent_path LIKE CONCAT('/',id,'/%'))
	</delete>
	
	<delete id="deleteByArticle">
		DELETE FROM blog_comment
		WHERE article_id = #{id}
	</delete>
	
	
	<select id="selectLastComments" resultMap="CommentDetail">
		SELECT 
		a.id,a.parent_id,a.parent_path,a.content,a.article_id,a.comment_date,
		 a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website,
		  p.comment_nickname AS p_comment_nickname,p.comment_email AS p_comment_email,p.comment_ip AS p_comment_ip,p.comment_admin AS p_comment_admin,p.comment_gravatar AS p_comment_gravatar,
		ba.title AS art_title,space_alias,a.comment_status,art_alias
		FROM blog_comment a
		LEFT OUTER JOIN blog_comment p ON a.parent_id = p.id
		LEFT OUTER JOIN blog_article ba ON a.article_id = ba.id
		LEFT OUTER JOIN blog_space bs ON ba.space_id  = bs.id
		WHERE ba.art_status = 0<!-- PUBLISHED -->
		AND a.comment_status = 0<!-- NORMAL -->
		<if test="space != null">
			AND bs.id = #{space.id} 
		</if>
		<if test="!queryHidden">
			AND IFNULL(ba.art_hidden, false) = false
			AND bs.space_art_hidden = false
		</if>
		<if test="!queryPrivate">
			AND ba.isPrivate = FALSE 
			AND bs.is_private = FALSE
			AND ba.art_lock IS NULL
			AND bs.space_lock IS NULL
		</if>
		<if test="!queryAdmin">
			AND a.comment_admin = FALSE
		</if>
		ORDER BY a.comment_date DESC ,a.id DESC
		LIMIT 0,#{limit}
	</select>
	
	<select id="selectArticlesCommentCount" resultMap="ArticleCommentsDetail" >
		SELECT a.article_id,COUNT(*) AS comments FROM blog_comment a
		WHERE a.comment_status = 0<!-- NORMAL -->
		AND a.article_id IN <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
		GROUP BY a.article_id
	</select>
	
	<select id="selectArticleCommentCount" resultType="int" >
		SELECT COUNT(*) FROM blog_comment a
		WHERE a.comment_status = 0<!-- NORMAL -->
		AND a.article_id = #{id}
	</select>
	
	<select id="selectArticlesTotalCommentCount" resultType="int">
		SELECT
			COUNT(a.id)
		FROM
			blog_comment a
		LEFT OUTER JOIN blog_article art ON a.article_id = art.id
		LEFT OUTER JOIN blog_space sp ON art.space_id = sp.id
		WHERE 
			a.comment_status = 0<!-- NORMAL -->
			AND art.art_status = 0<!-- published -->
		<if test="space != null">
			AND art.space_id = #{space.id}
		</if>
		<if test="!queryHidden">
			AND IFNULL(art.art_hidden, false) = false
			AND sp.space_art_hidden = false
		</if>
		<if test="!queryPrivate">
			AND art.isPrivate = false
			AND sp.is_private = false
		</if>
	</select>
		
	<update id="updateStatusToNormal">
		UPDATE blog_comment SET comment_status = 0 WHERE id = #{id}
	</update>
</mapper>