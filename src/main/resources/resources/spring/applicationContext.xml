<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		   					 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						     http://www.springframework.org/schema/context 
						     http://www.springframework.org/schema/context/spring-context-4.0.xsd
						     http://www.springframework.org/schema/aop 
						     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						     http://www.springframework.org/schema/tx 
						     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						      http://www.springframework.org/schema/cache 
						     http://www.springframework.org/schema/cache/spring-cache-4.0.xsd 
						     http://www.springframework.org/schema/task
		   					 http://www.springframework.org/schema/task/spring-task-4.0.xsd ">


	<context:property-placeholder
		location="classpath:resources/mybatis/db.properties,classpath:resources/app.properties,classpath:resources/mail.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${jdbc.miniPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
		<property name="automaticTestTable" value="${jdbc.automaticTestTable}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
	</bean>
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="classpath:resources/mybatis/mybatis-config.xml"
		p:dataSource-ref="dataSource" />
	<import resource="ui.xml" />

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<tx:annotation-driven transaction-manager="txManager" />

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="me.qyh.blog.dao,me.qyh.blog.lock.support,me.qyh.blog.comment" />
	</bean>

	<import resource="file.xml" />
	<context:component-scan
		base-package="me.qyh.blog.service,me.qyh.blog.config,me.qyh.blog.comment" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<cache:annotation-driven />
	<!-- 缓存配置 -->
	<bean id="cacheManager" class="org.springframework.cache.guava.GuavaCacheManager">
		<property name="cacheSpecification" value="maximumSize=500,expireAfterAccess=20m"/>
	</bean>

	<!-- 锁 -->
	<bean class="me.qyh.blog.lock.LockManager">
		<!-- <property name="expandedLockProvider"> <bean class="me.qyh.blog.lock.ExpandedLockProvider"> 
			<property name="expandedLocks"> <list> <bean class="me.qyh.blog.lock.support.PictureQALock"> 
			<property name="lockType" value="PictureQA" /> <property name="picture" value="http://img.static.qyh.me/article/life/4512f9b6503ceea6.jpg/900" 
			/> <property name="question" value="which game ?" /> <property name="answers" 
			value="WOW,wow,魔兽世界" /> <property name="id" value="expandedLock1"></property> 
			<property name="name" value="魔兽" /> </bean> </list> </property> <property 
			name="defaultTplResource"> <map> <entry key="PictureQA" value="classpath:me/qyh/blog/ui/page/PictureQALock.html" 
			/> </map> </property> </bean> </property> -->
	</bean>
	<bean class="me.qyh.blog.lock.SysLockProvider" />
	<bean class="me.qyh.blog.lock.LockAspect" />

	<!-- 登录验证 -->
	<bean class="me.qyh.blog.security.EnsureLoginAspect" />
	<!-- 自动登录 -->
	<bean class="me.qyh.blog.security.RememberMe" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:resources/messages/message" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean class="me.qyh.blog.message.Messages">
		<property name="locale" value="zh_CN" />
	</bean>

	<bean class="me.qyh.blog.service.impl.JcsegArticleIndexer"
		destroy-method="close">
		<constructor-arg index="0" value="/web/blog_index" />
		<constructor-arg index="1" value="SEARCH" />
	</bean>

	<!-- 如果不需要邮件通知这个服务请不要设置 -->
	<bean class="me.qyh.blog.mail.MailSender" destroy-method="shutdown"></bean>

	<!-- 如果不需要邮件通知这个服务请不要设置 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="protocol" value="${mail.protocol}" />
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.from">${mail.from}</prop>
			</props>
		</property>
	</bean>


	<bean class="me.qyh.blog.service.impl.Markdown2HtmlArticleContentHandler"
		id="markdown2Html" />

	<bean class="me.qyh.blog.service.impl.ArticleServiceImpl">
		<!-- markdown2html handler -->
		<property name="articleContentHandlers" ref="markdown2Html" />
	</bean>

	<bean class="me.qyh.blog.service.impl.ArticleIndexRebuildAspect" />

	<bean class="me.qyh.blog.metaweblog.MetaweblogHandler" />

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
		destroy-method="destroy">
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<bean id="taskScheduler"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
		destroy-method="destroy">
		<property name="poolSize" value="20" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<!-- 查询是否存在待发表的计划中博客，如果存在则发表该博客 -->
	<bean id="pushScheduledArticleJob" class="me.qyh.blog.service.impl.PushScheduledArticleJob" />
	<task:scheduled-tasks scheduler="taskScheduler">
		<!-- 默认5秒查询一次 -->
		<task:scheduled ref="pushScheduledArticleJob" method="doJob"
			cron="0/5 * * * * ?" />
	</task:scheduled-tasks>




	<!-- 默认评论服务 -->
	<bean class="me.qyh.blog.comment.DftCommentService">
		<!-- html内容清理器 -->
		<property name="htmlClean">
			<bean class="me.qyh.blog.security.input.DefaultHtmlClean" />
		</property>
	</bean>

	<bean class="me.qyh.blog.comment.CommentEventListener">
		<property name="handlers">
			<list>
				<bean class="me.qyh.blog.comment.EmailNotifyCommentHandler"
					destroy-method="shutdown">
					<property name="mailSubject" value="您有新的评论" />
				</bean>
			</list>
		</property>
	</bean>

</beans>      
